@charset "UTF-8";
/*------------------------------------*\
    #ALIENLEBARGE
\*------------------------------------*/
/**
 * CREDITS
 *
 * This stylesheet includes inuitcss (http://inuitcss.com/) stylesheet system
 * developed by Harry Roberts (http://csswizardry.com/).
 */
/**
 * CONTENTS
 *
 * SETTINGS
 * Global:              Globally-available variables and config.
 *
 * TOOLS
 * Tools:               You need tools to craft things.
 * Custom mixins:       Useful mixins.
 *
 * GENERIC
 * Normalize.css:       A level playing field.
 * Reset:               Resetting elements.
 * Shared:              Vertical rhythm shared margin.
 * Box-sizing:          Better default `box-sizing`.
 *
 * BASE
 * Links:               Links and anchors.
 * Page:                HTML and body styles
 * FOUT:                FOUT fonts
 * Codes:               Code blocks and preformated text style
 * Headings:            H1â€“H6 styles.
 * Headings custom:     Custom tweaks on Inuitcss
 * Paragraphs:          Paragraphs styles lede
 * Images:              Images and caption styles
 * Lists:               Lists styles
 * Quotes:              Blockquotes and citations
 *
 * OBJECTS
 * List-ui:             Ui list and inline list
 * List-bar:            Remove list style
 * Buttons:             Buttons style
 * Helper-classes:      Want to align or hide something
 *
 * COMPONENTS
 * Structures:          Wrapping and constraining elements.
 * Header image:        Big mama full-screen header
 * Header image iconic: Tweak needed to make iconic work with header image
 * Types:               Style on inline text
 * Navigation:          Navigation style
 * Borders:             Boreders on the top, on the left, ... everywhere
 *
 * TRUMPS
 * Text:                Text helpers.
 * Width:               helper classes that you can use to size things
 * Spacing:             collection of helper classes for spacings
 */
/*------------------------------------*\
    #SETTINGS
\*------------------------------------*/
/**
 * Sass vars, etc
 */
/*doc
---
title: Settings
name: custom-settings
category: Settings
---
*/
/*doc
---
title: Font settings
name: 01-font-settings
parent: custom-settings
---

```scss
$base-font-family:          "freight-text-pro", Georgia, serif;
$base-small-font-family:    "freight-micro-pro", $base-font-family;
$base-headings-font-family: "ff-dax-compact-web-pro", serif;
$base-code-font-family:     "inconsolata", Courier, monospace;
```
*/
/*doc
---
title: Color
name: 02-color
parent: custom-settings
---

```scss
$base-primary-color:    #ff5867;
```
*/
/*doc
---
title: Breakpoint
name: 03-breakpoint
parent: custom-settings
---

```scss
$base-break-xs: 500px;
$base-break-sm: 900px;
$base-break-md: 1200px;
```
*/
/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/*doc
---
title: Underline settings
name: 04-underline
parent: custom-settings
---
*/
/*------------------------------------*\
    #UNDERLINE SETTINGS
\*------------------------------------*/
/*------------------------------------*\
    #TOOLS
\*------------------------------------*/
/**
 * Functions and mixins
 */
/*
---
title: Mixins
name: mixin
category: tools
---
*/
/*
---
Inuit mixins
---
*/
/*
---
title: Mixin border-radius
name: mixin-border-radius
parent: mixin
---

Add prefix vendor for border-radius

- `$radius`: The radius for each corner

```scss
@mixin rounded($radius) {...}
```
*/
/*
---
title: Mixin shadow
name: mixin-shadow
parent: mixin
---

A mixin for creating drop shadows

- `$x`:     Vertical position of the shadow
- `$y`:     Horizontal position of the shadow
- `$blur`:  Amount of blur
- `$color`: The color

```scss
@mixin shadow($x, $y, $blur, $color) {...}
```
*/
/*
---
title: Mixin shadow inset
name: mixin-shadow-inset
parent: mixin
---

A mixin for creating inset shadows

- `$x`:     Vertical position of the shadow
- `$y`:     Horizontal position of the shadow
- `$blur`:  Amount of blur
- `$color`: The color

```scss
@mixin shadow-inset($x, $y, $blur, $color) {...}
```
*/
/*
---
title: Mixin transition
name: mixin-transition
parent: mixin
---

Add vendor prefix for transition

- `$property`: The kind of animation

```scss
@mixin transition($property) {...}
```
*/
/*
---
title: Mixin box-sizing
name: mixin-box-sizing
parent: mixin
---

Box-sizing will change the box-model of the element it is applied to.

```scss
@mixin box-sizing {...}
```
*/
/*
---
title: Mixin linear gradient
name: mixin-linear-gradient
parent: mixin
---

A mixin for creating linear gradient

- `$from`: From hex color
- `$to`:   To hex color

```scss
@mixin linear-gradient($from, $to) {...}
```
*/
/*
---
title: Mixin flexbox
name: mixin-flexbox
parent: mixin
---

The following mixins will help you with the flex*flexa* things.
*/
/*
---
title: Mixin flexbox container
name: mixin-flexbox-container
parent: mixin-flexbox
---

The 'flex' value causes an element to generate a block-level flex container box.

The 'inline-flex' value causes an element to generate a inline-level flex container box.

`display: flex | inline-flex`

http://w3.org/tr/css3-flexbox/#flex-containers

(Placeholder selectors for each type, for those who rather @extend)

```scss
@mixin flexbox {...};
@mixin inline-flex {...};
```
*/
/*
---
title: Mixin flexbox grow
name: mixin-flexbox-grow
parent: mixin-flexbox
---

The 'flex-grow' property sets the flex grow factor. Negative numbers are invalid.

- `$int`: Grow (Default: `0`)

```scss
@mixin flex-grow($int: 0) {...};
```
*/
/*
---
title: Mixin flexbox align items
name: mixin-flexbox-align-items
parent: mixin-flexbox
---

Flex items can be aligned in the cross axis of the current line of the flex
container, similar to 'justify-content' but in the perpendicular direction.
'align-items' sets the default alignment for all of the flex container's items,
including anonymous flex items. 'align-self' allows this default alignment to
be overridden for individual flex items. (For anonymous flex items, 'align-self'
always matches the value of 'align-items' on their associated flex container.)

Values: flex-start | flex-end | center | baseline | stretch

- `$value`: Value of the stretch (Default: `stretch`)

[W3C specs](http://w3.org/tr/css3-flexbox/#align-items-property)

```scss
@mixin align-items($value: stretch) {...};
```
*/
/*
---
title: Mixin center block
name: mixin-center-block
parent: mixin
---

Set an element to `display: block` and center via margin.

```scss
@mixin center-block {...}
```
*/
/*
---
title: Mixin screen reader only
name: mixin-sr-only
parent: mixin
---

The content can only be read by screen reader

```scss
@mixin sr-only {...}
```
*/
/*
---
title: Mixin transition
name: mixin-transition
parent: mixin
---

```scss
@mixin transition {...}
```
*/
/*
---
title: Mixin underline
name: mixin-underline
parent: mixin
---

If you set the variable in ems, be carefull. Firefox doesn't like dimensions <1px.
`$var * base-font-size > 1px`

```scss
@mixin underline {...}
```
*/
/*------------------------------------*\
    #UNDERLINE MIXINS
\*------------------------------------*/
/*------------------------------------*\
    #GENERIC
\*------------------------------------*/
/**
 * Generic, high-level styling, like resets, etc.
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none;
}

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 28px;
  margin-bottom: 1.4rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 56px;
  margin-left: 2.8rem;
}

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * Unclasses HTML elements (e.g. `h2`, `ul`).
 */
/*doc
---
title: Page
name: page
category: base
 ---
*/
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward â€˜jumpsâ€™ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Prevent certain mobile browsers from automatically zooming fonts.
 * 5. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-size: 1.25em;
  /* [1] */
  line-height: 1.4;
  /* [1] */
  background-color: #fff;
  color: #333;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -webkit-text-size-adjust: 100%;
  /* [4] */
  -ms-text-size-adjust: 100%;
  /* [4] */
  -moz-osx-font-smoothing: grayscale;
  /* [5] */
  -webkit-font-smoothing: antialiased;
  /* [5] */
}

/*doc
 ---
title: html
name: html
parent: page
 ---

Basic settings for font are set in `html`.
*/
html {
  font-family: "freight-text-pro", Georgia, serif;
  font-weight: 100;
}

/*doc
---
title: Fout
name: fout
category: base
---

The following fonts will be used until typekit fonts are loaded

*/
.wf-loading {
  font-family: Georgia, serif;
}
.wf-loading h1, .wf-loading h2, .wf-loading h3, .wf-loading h4, .wf-loading h5, .wf-loading h6 {
  font-family: "Helvetica Neue", Helvetica, Verdana, Arial, sans-serif;
}

/*doc
 ---
 title: Link
 name: link
 category: Link
 ---
*/
/*doc
---
title: Default link
name: default-link
parent: link
 ---

Determine the color of link.
`:hover` highlight the link when hovered.

```html_example
    <a href="#">Link</a>

    <p><a href="#">Link</a></p>
```
*/
a {
  color: #333;
  transition-duration: 200ms;
  transition-property: color;
  transition-timing-function: ease;
}
a:hover {
  color: #ff5867;
  transition-duration: 200ms;
  transition-property: color;
  transition-timing-function: ease;
}

h1 a,
.alpha a,
h2 a,
.beta a,
h3 a,
.gamma a,
h4 a,
.delta a,
h5 a,
.epsilon a,
h6 a,
.zeta a {
  text-decoration: none;
  background: linear-gradient(to top, #fff, #fff 1px, #333 1px, #333 2px, #fff 2px);
  text-shadow: -1px -1px 0 #fff, -1px -0.5px 0 #fff, -1px 0px 0 #fff, -1px 0.5px 0 #fff, -1px 1px 0 #fff, -0.5px -1px 0 #fff, -0.5px -0.5px 0 #fff, -0.5px 0px 0 #fff, -0.5px 0.5px 0 #fff, -0.5px 1px 0 #fff, 0px -1px 0 #fff, 0px -0.5px 0 #fff, 0px 0px 0 #fff, 0px 0.5px 0 #fff, 0px 1px 0 #fff, 0.5px -1px 0 #fff, 0.5px -0.5px 0 #fff, 0.5px 0px 0 #fff, 0.5px 0.5px 0 #fff, 0.5px 1px 0 #fff, 1px -1px 0 #fff, 1px -0.5px 0 #fff, 1px 0px 0 #fff, 1px 0.5px 0 #fff, 1px 1px 0 #fff;
}
h1 a:hover,
.alpha a:hover,
h2 a:hover,
.beta a:hover,
h3 a:hover,
.gamma a:hover,
h4 a:hover,
.delta a:hover,
h5 a:hover,
.epsilon a:hover,
h6 a:hover,
.zeta a:hover {
  text-decoration: none;
  background: linear-gradient(to top, #fff, #fff 1px, #ff5867 1px, #ff5867 2px, #fff 2px);
  text-shadow: -1px -1px 0 #fff, -1px -0.5px 0 #fff, -1px 0px 0 #fff, -1px 0.5px 0 #fff, -1px 1px 0 #fff, -0.5px -1px 0 #fff, -0.5px -0.5px 0 #fff, -0.5px 0px 0 #fff, -0.5px 0.5px 0 #fff, -0.5px 1px 0 #fff, 0px -1px 0 #fff, 0px -0.5px 0 #fff, 0px 0px 0 #fff, 0px 0.5px 0 #fff, 0px 1px 0 #fff, 0.5px -1px 0 #fff, 0.5px -0.5px 0 #fff, 0.5px 0px 0 #fff, 0.5px 0.5px 0 #fff, 0.5px 1px 0 #fff, 1px -1px 0 #fff, 1px -0.5px 0 #fff, 1px 0px 0 #fff, 1px 0.5px 0 #fff, 1px 1px 0 #fff;
}

a.btn {
  background-image: none;
  text-shadow: none;
}

/*doc
---
title: Code
name: code
category: Code
---
*/
/*doc
---
title: Codeblock
name: pre
parent: code
---

Use an explicit font stack to ensure browsers render correct `line-height`.

```html_example
<pre>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</pre>
```
*/
pre {
  font-size: 0.75em;
  font-family: "inconsolata", Courier, monospace;
  overflow: auto;
  white-space: pre;
  word-wrap: normal;
  background-color: #333;
  color: #fff;
  padding: 14px;
  border-radius: 2px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.25);
}
pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit;
}

 /*doc
---
title: Inline code
name: inline-code
parent: code
---

```html_example
<code>Hello</code>
```

```html_example
<kbp>Hello</kbp>
```

```html_example
<samp>Hello</samp>
```
*/
code,
kbd,
samp {
  font-family: "inconsolata", Courier, monospace;
}

p code, ul code {
  font-size: 0.75em;
  /* Override `pre` font-size */
  background-color: #f8f8f8;
  border-radius: 2px;
}

/*doc
---
title: Headers
name: headers
category: Typography
---


```html_example
    <h1>Heading 1</h1>
    <p class="alpha">Paragraph with h1 style</p>
```
```html_example
    <h2>Heading 2</h2>
    <p class="beta">Paragraph with h2 style</p>
```
```html_example
    <h3>Heading 3</h3>
    <p class="gamma">Paragraph with h3 style</p>
```
```html_example
    <h4>Heading 4</h4>
    <p class="delta">Paragraph with h4 style</p>
```
```html_example
    <h5>Heading 5</h5>
    <p class="epsilon">Paragraph with h5 style</p>
```
```html_example
    <h6>Heading 6</h6>
    <p class="zeta">Paragraph with h6 style</p>

```
*/
/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1â€“6, with corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 */
h1,
.alpha {
  font-size: 40px;
  font-size: 2rem;
  line-height: 1.4;
}

h2,
.beta {
  font-size: 32px;
  font-size: 1.6rem;
  line-height: 1.75;
}

h3,
.gamma {
  font-size: 24px;
  font-size: 1.2rem;
  line-height: 1.16667;
}

h4,
.delta {
  font-size: 20px;
  font-size: 1rem;
  line-height: 1.4;
}

h5,
.epsilon {
  font-size: 16px;
  font-size: 0.8rem;
  line-height: 1.75;
}

h6,
.zeta {
  font-size: 14px;
  font-size: 0.7rem;
  line-height: 2;
}

h1,
.alpha,
h2,
.beta,
h3,
.gamma,
h4,
.delta,
h5,
.epsilon,
h6,
.zeta {
  font-family: "ff-dax-compact-web-pro", serif;
  letter-spacing: -0.025em;
  font-weight: bold;
}

/*doc
---
title: Paragraph
name: paragraph
category: Typography
---
*/
/*doc
---
title: Lede
name: lede
parent: paragraph
---

Lede is the same font as the headings.
It can be use for intriduction paragraph.

```html_example
    <p class="lede">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae placeat nam, doloremque, dignissimos nemo debitis.</p>
```
*/
/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 20px;
  font-size: 1rem;
  line-height: 1.4;
}

.lede {
  font-family: "ff-dax-compact-web-pro", serif;
  font-weight: 300;
}

/*doc
---
title: Small
name: small
parent: paragraph
---

Lede is the same font as the headings.
It can be use for intriduction paragraph.

```html_example
    <p class="small">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae placeat nam, doloremque, dignissimos nemo debitis.</p>
    <p>Lorem ipsum <small>dolor sit amet</small>, consectetur adipisicing elit. Perferendis, assumenda?</p>
```
*/
.small,
figcaption,
small {
  font-size: 17px;
  font-size: 0.85rem;
  line-height: 1.64706;
  font-family: "freight-micro-pro", "freight-text-pro", Georgia, serif;
}

/*doc
---
title: Strong
name: strong
parent: paragraph
---

```html_example
    <p class="strong">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae placeat nam, doloremque, dignissimos nemo debitis.</p>
    <p>Lorem ipsum <strong>dolor sit amet</strong>, consectetur adipisicing elit. Perferendis, assumenda?</p>
```
*/
.strong,
strong {
  font-weight: bold;
}

/*doc
---
title: Italic
name: italic
parent: paragraph
---

```html_example
    <p class="italic">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae placeat nam, doloremque, dignissimos nemo debitis.</p>
    <p>Lorem ipsum <strong>dolor sit amet</strong>, consectetur adipisicing elit. Perferendis, assumenda?</p>
```
*/
.italic {
  font-style: italic;
}

/*doc
---
title: Image
name: image
category: Image
---
*/
/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, letâ€™s
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none;
}

/*doc
---
title: Figure
name: figure
parent: image
---

```html_example
    <figure>
      <img src="http://placekitten.com/g/200/300" alt="image">
    </figure>
```
*/
@media screen and (min-width: 45em) {
  figure {
    position: relative;
  }
}

/*doc
---
title: Figcaption
name: figcaption
parent: image
---

```html_example
    <figure>
      <img src="http://placekitten.com/g/200/300" alt="image">
      <figcaption>A cute kitty</figcaption>
    </figure>
```
*/
@media screen and (min-width: 45em) {
  figcaption {
    position: absolute;
    top: 0;
    left: -224px;
    width: 196px;
    text-align: right;
  }
}

/*doc
---
title: Lists
name: list
category: List
---

Default list style

```html_example
<ul>
  <li>item</li>
  <li>item</li>
  <li>item</li>
</ul>
```
*/
/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/*------------------------------------*\
    #VERTICAL-RHYTHME
\*------------------------------------*/
/**
 * The vertical rhythme base objet let you add some spacing between objects
 * (headings, paragraphs, quotes, etc.) that keep vertical rhythme consistent.
 */
h2 {
  /**
   * Add padding at the top for vertical rhythme purpose
   */
  padding-top: 28px;
  padding-top: 1.4rem;
}

/*doc
---
title: Quote
name: quote
category: Typography
---


```html_example
<blockquote>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</blockquote>
```
*/
/*doc
---
title: Blockquote
name: blockquote
parent: quote
---


```html_example
<blockquote>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</blockquote>
```
*/
blockquote {
  font-style: italic;
  margin: 0 28px;
}

/*------------------------------------*\
    #UNDERLINE LINKS
\*------------------------------------*/
a {
  color: #333;
  text-decoration: none;
  background: linear-gradient(to top, #fff, #fff 1px, #333 1px, #333 2px, #fff 2px);
  text-shadow: -1px -1px 0 #fff, -1px -0.5px 0 #fff, -1px 0px 0 #fff, -1px 0.5px 0 #fff, -1px 1px 0 #fff, -0.5px -1px 0 #fff, -0.5px -0.5px 0 #fff, -0.5px 0px 0 #fff, -0.5px 0.5px 0 #fff, -0.5px 1px 0 #fff, 0px -1px 0 #fff, 0px -0.5px 0 #fff, 0px 0px 0 #fff, 0px 0.5px 0 #fff, 0px 1px 0 #fff, 0.5px -1px 0 #fff, 0.5px -0.5px 0 #fff, 0.5px 0px 0 #fff, 0.5px 0.5px 0 #fff, 0.5px 1px 0 #fff, 1px -1px 0 #fff, 1px -0.5px 0 #fff, 1px 0px 0 #fff, 1px 0.5px 0 #fff, 1px 1px 0 #fff;
}
a:hover {
  color: #ff5867;
  text-decoration: none;
  background: linear-gradient(to top, #fff, #fff 1px, #ff5867 1px, #ff5867 2px, #fff 2px);
  text-shadow: -1px -1px 0 #fff, -1px -0.5px 0 #fff, -1px 0px 0 #fff, -1px 0.5px 0 #fff, -1px 1px 0 #fff, -0.5px -1px 0 #fff, -0.5px -0.5px 0 #fff, -0.5px 0px 0 #fff, -0.5px 0.5px 0 #fff, -0.5px 1px 0 #fff, 0px -1px 0 #fff, 0px -0.5px 0 #fff, 0px 0px 0 #fff, 0px 0.5px 0 #fff, 0px 1px 0 #fff, 0.5px -1px 0 #fff, 0.5px -0.5px 0 #fff, 0.5px 0px 0 #fff, 0.5px 0.5px 0 #fff, 0.5px 1px 0 #fff, 1px -1px 0 #fff, 1px -0.5px 0 #fff, 1px 0px 0 #fff, 1px 0.5px 0 #fff, 1px 1px 0 #fff;
}

/*------------------------------------*\
    #OBJECTS
\*------------------------------------*/
/**
 * Objects and abstractions.
 */
/*doc
---
title: List UI
name: list-ui
category: List
---

The `list-ui` object creates blocky, keyline-delimited list items.

```html_example
<ul class="list-ui">
  <li>item</li>
  <li>item</li>
  <li>item</li>
</ul>
```
*/
/*------------------------------------*\
    #LIST-UI
\*------------------------------------*/
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */
.list-ui,
.list-ui__item,
.list-ui > li {
  border: 0 solid #ccc;
}

.list-ui {
  margin: 0;
  padding: 0;
  list-style: none;
  border-top-width: 1px;
}

.list-ui__item,
.list-ui > li {
  padding: 28px;
  border-bottom-width: 1px;
}

/*doc
---
title: List inline
name: list-inline
category: List
---

The List-inline object simply displays a list as one horizontal row.

```html_example
<ul class="list-inline">
  <li>item</li>
  <li>item</li>
  <li>item</li>
</ul>
```
*/
/*------------------------------------*\
    #LIST-INLINE
\*------------------------------------*/
/**
 * The list-inline object simply displays a list of items in one line.
 */
.list-inline {
  margin: 0;
  padding: 0;
  list-style: none;
}
.list-inline > li {
  display: inline-block;
}

/*doc
---
title: List bare
name: list-bare
category: List
---

The List-bare object remove classics liste styles.

```html_example
<ul class="list-bare">
  <li>item</li>
  <li>item</li>
  <li>item</li>
</ul>
```
*/
/*------------------------------------*\
    #LIST-BARE
\*------------------------------------*/
/**
 * The list-bare object simply removes any indents and bullet points from lists.
 */
.list-bare {
  margin: 0;
  padding: 0;
  list-style: none;
}

/*doc
---
title: Buttons
name: buttons
category: Button
---

```html_example
<a href="#" class="btn">button</a>
```
*/
/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * A simple button object.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 13px 27px;
  /* [7] */
  background-color: rgba(255, 255, 255, 0.25);
  border: 1px solid none;
  border-radius: 7px;
}
.btn, .btn:hover, .btn:active, .btn:focus {
  text-decoration: none;
  /* [4] */
  color: #333;
}

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Small buttons.
 */
.btn--small {
  padding: 6px 13px;
  /* [7] */
}

/*doc
---
title: Helper classes
name: helper-classes
category: Helpers
---
*/
/*doc
---
title: Center block
name: center-block
parent: helper-classes
---

Set an element to `display: block` and center via `margin`.

```html_example
<div class="center-block">
  ...
</div>
```
*/
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/*doc
---
title: Pull right
name: pull-right
parent: helper-classes
---

Float element to the right

```html_example
<div class="pull-right">
  ...
</div>
```
*/
.pull-right {
  float: right !important;
}

/*doc
---
title: Screen reader only
name: sr-only
parent: helper-classes
---

Hide an element to all devices except screen readers with `.sr-only`.
Necessary for following accessibility best practices.

```html_example
<a class="sr-only" href="#content">Skip to main content</a>
```
*/
.sr-only {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
}

/**
 * Relative
 *
 * Set the position to relative to help some positioning
 */
/*doc
---
title: Relative
name: relative
parent: helper-classes
---

Set the position to relative to help some positioning

```html_example
<div clas="relative">...</div>
```
*/
.relative {
  position: relative;
}

/*------------------------------------*\
    #COMPONMENT
\*------------------------------------*/
/**
 * Designed UI elements.
 */
/*doc
---
title: Structure
name: structure
category: Componment
---

All the structural styles.

*/
/*doc
---
title: Container
name: container
parent: structure
---

Container is the main ... container

```
<div class="container">
  ...
<div>
```
*/
.container {
  max-width: 750px;
  padding: 0 28px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/*doc
---
title: Header image
name: header-image
category: Componment
---

Put a big image in the header that fit the screen

```
<header class="header-image" style="background-image: url('...')">
  <figure class="header-image__hidden-image">
    <img src="...">
  </figure>
  <div class="header-image__text-container">
    <h1 class="mb0 pt">Title</h1>
    <p class="meta">Meta info</p>
  </div>
</header>
```
*/
.header-image {
  height: 100vh;
  min-height: 300px;
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: end;
  -webkit-align-items: flex-end;
  -moz-align-items: flex-end;
  align-items: flex-end;
}
@media screen and (max-width: 63.9375em) {
  .header-image {
    background-attachment: scroll;
    /*  Fixed background image cost too much ressource on mobile */
  }
}
@media screen and (min-width: 64em) {
  .header-image {
    background-attachment: fixed;
    /*  Fixed background image cost too much ressource on mobile */
  }
}

/*doc
---
title: Header image text container
name: header-image__text-container
parent: header-image
---

The title and meta inf have to be in a `div` with class `header-image__text-container`.

```
<div class="header-image__text-container">
  <h1 class="mb0 pt">Title</h1>
  <p class="meta">Meta info</p>
</div>
```

Add `.container` if you want the title to have the same width as the content.

```
<div class="header-image__text-container container">
  <h1 class="mb0 pt">Title</h1>
  <p class="meta">Meta info</p>
</div>
```
*/
.header-image__text-container {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  -ms-flex-positive: 1;
      flex-grow: 1;
  color: #fff;
  z-index: 1;
}

/*doc
---
title: Header image overlay
name: header-image--overlay
parent: header-image
---

Add a background gradient to improve the legibility of the text.

```
<header class="header-image header-image--overlay" style="background-image: url('...')">
  ...
</header>
```
*/
.header-image--overlay:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  min-height: 300px;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.1);
}

/*doc
---
title: Header image hidden image
name: header-image__hidden-image
parent: header-image
---

If CSS are unactivated in the browser. The background image in the header
will not be shown. So we add a `<figure><img></figure>` in the header.
Yeah! That's progressive enhancement

```
<figure class="header-image__hidden-image">
  <img src="...">
</figure>
```
*/
.header-image__hidden-image {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
}

/*------------------------------------*\
    #HEADER-IMAGE__ICONIC
\*------------------------------------*/
/*doc
---
title: Header image iconic
name: header-image-iconic
parent: header-image
---

Extend `.header-image {}` in _components.header-image.scss.

Those style are for iconic icons in the `header-image` componment.
**It require `header-image` style file.**
Iconic icons are the same color as the text in header
*/
.header-image .iconic * {
  fill: #fff;
  stroke: #fff;
}

/*doc
---
title: Types
name: types
category: Helpers
---

*/
/*doc
---
title: Text left
name: text-left
parent: types
---

Left aligned text

```html_example
<p class="align-left">Align me!</p>
```
*/
.text-left {
  text-align: left;
}

/*doc
---
title: Text center
name: text-center
parent: types
---

Center aligned text

```html_example
<p class="text-center">Align me!</p>
```
*/
.text-center {
  text-align: center;
}

/*doc
---
title: Text right
name: text-right
parent: types
---

Right Aligned text

```html_example
<p class="text-right">Align me!</p>
```
*/
.text-right {
  text-align: right;
}

/*doc
---
title: Text justify
name: text-justify
parent: types
---

Justified text

```html_example
<p class="text-justify">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta minima quam tempora soluta illum dolore libero. Quidem perferendis, voluptatum, optio dignissimos itaque quaerat nihil fugiat iusto, aperiam mollitia earum non?</p>
```
*/
.text-justify {
  text-align: justify;
}

/*doc
---
title: Font weight normal
name: font-weight-normal
parent: types
---

Set the font weight to normal

```html_example
<h1 class="font-weight-normal">Heading with normal weight</h1>
```
*/
.font-weight-normal {
  font-weight: 400;
}

/*doc
---
title: Meta
name: meta
parent: types
---

Design for article meta information

```html_example
<p class="meta">This is meta information</p>
```
*/
.meta {
  font-family: "ff-dax-compact-web-pro", serif;
  letter-spacing: -0.015em;
  font-weight: 400;
  font-size: 14px;
  font-size: 0.7rem;
  line-height: 2;
}

/*doc
---
title: Navigation
name: navigation
category: Componment
---
*/
/*doc
---
title: Primary Navigation
name: primary-navigation
parent: navigation
---

```
<div class="primary-navigation">
  <a>...</a>
<div>
```
*/
.primary-navigation {
  position: fixed;
  z-index: 999;
  top: 0;
  right: 0;
}

/*doc
---
title: Border
name: border
category: Componment
---
Add border to your content.

`.b(t|r|b|l) {}` = border top/right/bottom/left
*/
  /*doc
   ---
   title: Border bottom
   name: border-bottom
   parent: border
   ---


  ```html_example
      <div class="bb">Content</div>
  ```
  */
.bb {
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: #ccc;
}

/*doc
---
title: Image shapes
name: image-shapes
category: Componment
---

Give a shape to your images.

*/
/*doc
---
title: Image circle
name: image-circle
parent: image-shapes
---

Put your squarish images into a circle.
Be aware, the image have to have the same height and weight ... like a square.

```html_example
<img src="http://placekitten.com/g/75/75" class="image-circle">
```

*/
.image-circle {
  border-radius: 50%;
}

/*doc
---
title: Side-element
name: side-element
category: Componment
---

Put something on the side.  
*It's better to hide it on big screen*

```html_example
<h2>
  <span class="side-element">hello</span>
  <span>Heading</span>
</h2>
```
*/
.side-element {
  display: inline-block;
  width: 280px;
  margin-left: -280px;
  padding-right: 14px;
  text-align: right;
}
.side-element .iconic .iconic-property-accent {
  fill: RGBA(200, 200, 200, 1);
  stroke: RGBA(200, 200, 200, 1);
}
.side-element .iconic * {
  fill: RGBA(220, 220, 220, 1);
  stroke: RGBA(220, 220, 220, 1);
}

/*doc
---
title: Iconic
name: iconic
category: Componment
---
*/
/*doc
---
title: Iconic link
name: iconic-link
parent: iconic
---

Link style for iconic icons.
Same style as the default links.
*/
a .iconic {
  fill: #333;
  transition-duration: 200ms;
  transition-property: all;
  transition-timing-function: ease;
}
a .iconic:hover {
  fill: #ff5867;
  transition-duration: 200ms;
  transition-property: all;
  transition-timing-function: ease;
}

/*------------------------------------*\
    #TRUMPS
\*------------------------------------*/
/**
 * Overrides and helper classes.
 */
/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Whole.
 */
[class~="1/1"] {
  width: 100% !important;
}

/**
 * Halves.
 */
[class~="1/2"],
[class~="2/4"],
[class~="3/6"],
[class~="4/8"],
[class~="5/10"],
[class~="6/12"] {
  width: 50% !important;
}

/**
 * Thirds.
 */
[class~="1/3"],
[class~="2/6"],
[class~="3/9"],
[class~="4/12"] {
  width: 33.3333333% !important;
}

[class~="2/3"],
[class~="4/6"],
[class~="6/9"],
[class~="8/12"] {
  width: 66.6666666% !important;
}

/**
 * Quarters.
 */
[class~="1/4"],
[class~="2/8"],
[class~="3/12"] {
  width: 25% !important;
}

[class~="3/4"],
[class~="6/8"],
[class~="9/12"] {
  width: 75% !important;
}

/**
 * Fifths.
 */
[class~="1/5"],
[class~="2/10"] {
  width: 20% !important;
}

[class~="2/5"],
[class~="4/10"] {
  width: 40% !important;
}

[class~="3/5"],
[class~="6/10"] {
  width: 60% !important;
}

[class~="4/5"],
[class~="8/10"] {
  width: 80% !important;
}

/**
 * Sixths.
 */
[class~="1/6"],
[class~="2/12"] {
  width: 16.6666666% !important;
}

[class~="5/6"],
[class~="10/12"] {
  width: 83.3333333% !important;
}

/**
 * Eighths.
 */
[class~="1/8"] {
  width: 12.5% !important;
}

[class~="3/8"] {
  width: 37.5% !important;
}

[class~="5/8"] {
  width: 62.5% !important;
}

[class~="7/8"] {
  width: 87.5% !important;
}

/**
 * Ninths.
 */
[class~="1/9"] {
  width: 11.1111111% !important;
}

[class~="2/9"] {
  width: 22.2222222% !important;
}

[class~="4/9"] {
  width: 44.4444444% !important;
}

[class~="5/9"] {
  width: 55.5555555% !important;
}

[class~="7/9"] {
  width: 77.7777777% !important;
}

[class~="8/9"] {
  width: 88.8888888% !important;
}

/**
 * Tenths.
 */
[class~="1/10"] {
  width: 10% !important;
}

[class~="3/10"] {
  width: 30% !important;
}

[class~="7/10"] {
  width: 70% !important;
}

[class~="9/10"] {
  width: 90% !important;
}

/**
 * Twelfths.
 */
[class~="1/12"] {
  width: 8.3333333% !important;
}

[class~="5/12"] {
  width: 41.6666666% !important;
}

[class~="7/12"] {
  width: 58.3333333% !important;
}

[class~="11/12"] {
  width: 91.6666666% !important;
}

/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 28px !important;
}

.mt {
  margin-top: 28px !important;
}

.mr {
  margin-right: 28px !important;
}

.mb {
  margin-bottom: 28px !important;
}

.ml {
  margin-left: 28px !important;
}

.mh {
  margin-right: 28px !important;
  margin-left: 28px !important;
}

.mv {
  margin-top: 28px !important;
  margin-bottom: 28px !important;
}

/**
 * Add large margins.
 */
.m\+ {
  margin: 56px !important;
}

.mt\+ {
  margin-top: 56px !important;
}

.mr\+ {
  margin-right: 56px !important;
}

.mb\+ {
  margin-bottom: 56px !important;
}

.ml\+ {
  margin-left: 56px !important;
}

.mh\+ {
  margin-right: 56px !important;
  margin-left: 56px !important;
}

.mv\+ {
  margin-top: 56px !important;
  margin-bottom: 56px !important;
}

/**
 * Remove margins.
 */
.m0 {
  margin: 0 !important;
}

.mt0 {
  margin-top: 0 !important;
}

.mr0 {
  margin-right: 0 !important;
}

.mb0 {
  margin-bottom: 0 !important;
}

.ml0 {
  margin-left: 0 !important;
}

.mh0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

.mv0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/**
 * Padding helper classes.
 *
 * Add paddings.
 */
.p {
  padding: 28px !important;
}

.pt {
  padding-top: 28px !important;
}

.pr {
  padding-right: 28px !important;
}

.pb {
  padding-bottom: 28px !important;
}

.pl {
  padding-left: 28px !important;
}

.ph {
  padding-right: 28px !important;
  padding-left: 28px !important;
}

.pv {
  padding-top: 28px !important;
  padding-bottom: 28px !important;
}

/**
 * Add large paddings.
 */
.p\+ {
  padding: 56px !important;
}

.pt\+ {
  padding-top: 56px !important;
}

.pr\+ {
  padding-right: 56px !important;
}

.pb\+ {
  padding-bottom: 56px !important;
}

.pl\+ {
  padding-left: 56px !important;
}

.ph\+ {
  padding-right: 56px !important;
  padding-left: 56px !important;
}

.pv\+ {
  padding-top: 56px !important;
  padding-bottom: 56px !important;
}

/**
 * Remove paddings.
 */
.p0 {
  padding: 0 !important;
}

.pt0 {
  padding-top: 0 !important;
}

.pr0 {
  padding-right: 0 !important;
}

.pb0 {
  padding-bottom: 0 !important;
}

.pl0 {
  padding-left: 0 !important;
}

.ph0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.pv0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/*doc
---
title: Responsive utilities
name: responsive-utilities
category: Responsive
---

Hide and show things depending on the viewport size.

|                      | Palm<br>*&lt;45em* | Lap<br>&lt;45em, &gt;64em | Desk<br>&gt;64em |
| -------------------- |:------------------:|:-------------------------:|:----------------:|
| `.hidden-palm`       | hidden             | **visible**               | **visible**      |
| `.hidden-lap-and-up` | **visible**        | hidden                    | hidden           |
| `.hidden-porable`    | hidden             | hidden                    | **visible**      |
| `.hidden-lap`        | **visible**        | hidden                    | **visible**     |
| `.hidden-desk`       | **visible**        | **visible**               | hidden           |

```html_example
<p class="hidden-palm">hidden-palm</p>
<p class="hidden-lap-and-up">hidden-lap-and-up</p>
<p class="hidden-portable">hidden-portable</p>
<p class="hidden-lap">hidden-lap</p>
<p class="hidden-desk">hidden-desk</p>
```
*/
@media screen and (max-width: 44.9375em) {
  .hidden-palm {
    display: none;
  }
}

@media screen and (min-width: 45em) {
  .hidden-lap-and-up {
    display: none;
  }
}

@media screen and (max-width: 63.9375em) {
  .hidden-portable {
    display: none;
  }
}

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .hidden-lap {
    display: none;
  }
}

@media screen and (min-width: 64em) {
  .hidden-desk {
    display: none;
  }
}

/*# sourceMappingURL=style.css.map */
/*!
 * alienlebarge-blog v1.11.1 (http://www.alienlebarge.ch)
 * Copyright 2014-2015 CÃ©dric Aellen
 * Licensed under MIT (https://github.com/alienlebarge/alienlebarge.github.com/blob/master/LICENSE)
 */
