@charset "UTF-8";
/*------------------------------------*\
    #DEFAULTS
\*------------------------------------*/
/**
 * These variables are inuitcss’ defaults; they should not be modified or
 * adjusted, you should redfine the variables in your own overrides file and
 * include it in your project before this file. 
 */
/**
 * High-level base settings.
 */
/**
 * Namespace.
 *
 * Would you like inuitcss’ classes to be prepended with a namespace? If so,
 * define it here.
 */
/**
 * Headings.
 *
 * These font sizes, defined in pixels, will be converted into rems (with pixel
 * fallbacks) by inuitcss.
 */
/**
 * These variables are framework variables, sourced from variables defined
 * above. Feel free to use these variables throughout your project, but do not
 * modify or reassign them.
 */
/*------------------------------------*\
    #FUNCTIONS
\*------------------------------------*/
/**
 * inuitcss makes use of a few functions that are also available for you to use
 * later on in your extension of the framework.
 */
/**
 * Maths helpers.
 *
 * Halve and double numbers, returning rounded integers. E.g.:
 *
   .foo {
       padding: halve(3.2px);
   }
 *
 */
/*------------------------------------*\
    #MIXINS
\*------------------------------------*/
/**
 * inuitcss has a number of default mixins that the framework, and developers
 * working with it, can make use of.
 */
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   .foo {
       @include font-size(10px);
   }
 *
 */
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none;
}

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * If we have included this file, set a variable to tell the rest of the
 * framework that global `box-sizing: border-box` has been set.
 */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem;
}

/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after,
.media:after,
.box:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: white;
  color: #333333;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
}

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
}

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6, with corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 */
h1,
.alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333;
}

h2,
.beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6;
}

h3,
.gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1;
}

h4,
.delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
}

h5,
.epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}

h6,
.zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
}

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
/**
 * Simple `table` styles.
 */
table {
  width: 100%;
}

th,
td {
  padding: 6px;
}

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
}

/**
 * If a `width` and/or `height` attribute have been explicitly defined, let’s
 * not make the image fluid.
 */
img[width],
img[height] {
  max-width: none;
}

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 *
 * Predefine the variables below in order to alter and enable specific features.
 */
/**
 * Here we set a variable assuming that `box-sizing: border-box;` is not set
 * globally. If it has been previously been defined, the following variable will
 * be overriden and will be set to `true`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px;
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
}

/**
 * Different size variations.
 */
/**
 * Layout items without gutters.
 */
/**
 * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your markup
 * will display in order 4, 3, 2, 1 on your page.
 */
/**
 * Align layout items to the vertical centers or bottoms of each other.
 */
/**
 * Make the layout items fill up from the right hand side.
 */
/**
 * Make the layout items fill up from the center outward.
 */
/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 *
 * Predefine the variables below in order to alter and enable specific features.
 */
.media {
  display: block;
}

.media__img {
  float: left;
  margin-right: 24px;
}
.media__img > img {
  display: block;
}

.media__body {
  overflow: hidden;
}
.media__body,
.media__body > :last-child {
  margin-bottom: 0;
}

/**
 * Size variants.
 */
/**
 * Flush media objects have no space between the image- and text-content.
 */
/**
 * Reversed image location (right instead of left). Extends `.media`.
 */
/*------------------------------------*\
    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 *
 * Predefine the variables below in order to alter and enable specific features.
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */
}

/**
 * Items within a flag object. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.flag__img,
.flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */
}

/**
 * Flag images have a space between them and the body of the object.
 */
.flag__img {
  padding-right: 24px;
}
.flag__img > img {
  display: block;
  max-width: none;
}

/**
 * The container for the main content of the flag object.
 *
 * 1. Forces the `.flag__body` to take up all remaining space.
 */
.flag__body {
  width: 100%;
  /* [1] */
}

/**
 * Size variants.
 */
/**
 * Reversed flag objects have their image-content to the right, and text-content
 * to the left.
 *
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */
.flag--rev {
  direction: rtl;
  /* [1] */
}
.flag--rev > .flag__img,
.flag--rev > .flag__body {
  direction: ltr;
  /* [2] */
}
.flag--rev > .flag__img {
  padding-right: 0;
  /* [3] */
  padding-left: 24px;
  /* [3] */
}

/**
 * Flush flag objects have no space between the image- and text-content.
 */
/**
 * Vertical alignment variations of the flag object. Either align image- and
 * text-content to the tops of bottoms of each other.
 */
/*------------------------------------*\
    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 *
 * Predefine the variables below in order to alter and enable specific features.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 24px;
}
.box > :last-child {
  margin-bottom: 0;
}

/**
 * Size variants
 */
/*------------------------------------*\
    #TABS
\*------------------------------------*/
/**
 * A simple abstraction for making equal-width navigation tabs.
 *
 * 1. Reset any residual styles (most likely from lists).
 * 2. Tables for layout!
 * 3. Force all `table-cell` children to have equal widths.
 * 4. Force the object to be the full width of its parent. Combined with [2],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.tabs {
  margin: 0;
  /* [1] */
  padding: 0;
  /* [1] */
  list-style: none;
  /* [1] */
  display: table;
  /* [2] */
  table-layout: fixed;
  /* [3] */
  width: 100%;
  /* [4] */
  text-align: center;
}

.tabs__item {
  display: table-cell;
  /* [2] */
}

.tabs__link {
  display: block;
}

/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Halves.
 */
[class*="1/2"],
[class*="2/4"],
[class*="3/6"],
[class*="4/8"],
[class*="5/10"],
[class*="6/12"] {
  width: 50% !important;
}

/**
 * Thirds.
 */
[class*="1/3"],
[class*="2/6"],
[class*="3/9"],
[class*="4/12"] {
  width: 33.3333333% !important;
}

[class*="2/3"]
[class*="4/6"],
[class*="6/9"],
[class*="8/12"] {
  width: 66.6666666% !important;
}

/**
 * Quarters.
 */
[class*="1/4"],
[class*="2/8"],
[class*="3/12"] {
  width: 25% !important;
}

[class*="3/4"],
[class*="6/8"],
[class*="9/12"] {
  width: 75% !important;
}

/**
 * Fifths.
 */
[class*="1/5"],
[class*="2/10"] {
  width: 20% !important;
}

[class*="2/5"],
[class*="4/10"] {
  width: 40% !important;
}

[class*="3/5"],
[class*="6/10"] {
  width: 60% !important;
}

[class*="4/5"],
[class*="8/10"] {
  width: 80% !important;
}

/**
 * Sixths.
 */
[class*="1/6"],
[class*="2/12"] {
  width: 16.6666666% !important;
}

[class*="5/6"],
[class*="10/12"] {
  width: 83.3333333% !important;
}

/**
 * Eighths.
 */
[class*="1/8"] {
  width: 12.5% !important;
}

[class*="3/8"] {
  width: 37.5% !important;
}

[class*="5/8"] {
  width: 62.5% !important;
}

[class*="7/8"] {
  width: 87.5% !important;
}

/**
 * Ninths.
 */
[class*="1/9"] {
  width: 11.1111111% !important;
}

[class*="2/9"] {
  width: 22.2222222% !important;
}

[class*="4/9"] {
  width: 44.4444444% !important;
}

[class*="5/9"] {
  width: 55.5555555% !important;
}

[class*="7/9"] {
  width: 77.7777777% !important;
}

[class*="8/9"] {
  width: 88.8888888% !important;
}

/**
 * Tenths.
 */
[class*="1/10"] {
  width: 10% !important;
}

[class*="3/10"] {
  width: 30% !important;
}

[class*="7/10"] {
  width: 70% !important;
}

[class*="9/10"] {
  width: 90% !important;
}

/**
 * Twelfths.
 */
[class*="1/12"] {
  width: 8.3333333% !important;
}

[class*="5/12"] {
  width: 41.6666666% !important;
}

[class*="7/12"] {
  width: 58.3333333% !important;
}

[class*="11/12"] {
  width: 91.6666666% !important;
}

/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|e|s)(-|+|0) {}` = margin/padding top/right/bottom/left/ends/sides less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 24px !important;
}

.mt {
  margin-top: 24px !important;
}

.mr {
  margin-right: 24px !important;
}

.mb {
  margin-bottom: 24px !important;
}

.ml {
  margin-left: 24px !important;
}

.me {
  margin-top: 24px !important;
  margin-bottom: 24px !important;
}

.ms {
  margin-right: 24px !important;
  margin-left: 24px !important;
}

/**
 * Add small margins.
 */
.m- {
  margin: 12px !important;
}

.mt- {
  margin-top: 12px !important;
}

.mr- {
  margin-right: 12px !important;
}

.mb- {
  margin-bottom: 12px !important;
}

.ml- {
  margin-left: 12px !important;
}

.me- {
  margin-top: 12px !important;
  margin-bottom: 12px !important;
}

.ms- {
  margin-right: 12px !important;
  margin-left: 12px !important;
}

/**
 * Add large margins.
 */
.m\+ {
  margin: 48px !important;
}

.mt\+ {
  margin-top: 48px !important;
}

.mr\+ {
  margin-right: 48px !important;
}

.mb\+ {
  margin-bottom: 48px !important;
}

.ml\+ {
  margin-left: 48px !important;
}

.me\+ {
  margin-top: 48px !important;
  margin-bottom: 48px !important;
}

.ms\+ {
  margin-right: 48px !important;
  margin-left: 48px !important;
}

/**
 * Remove margins.
 */
.m0 {
  margin: 0 !important;
}

.mt0 {
  margin-top: 0 !important;
}

.mr0 {
  margin-right: 0 !important;
}

.mb0 {
  margin-bottom: 0 !important;
}

.ml0 {
  margin-left: 0 !important;
}

.me0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.ms0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

/**
 * Padding helper classes.
 *
 * Add paddings.
 */
.p {
  padding: 24px !important;
}

.pt {
  padding-top: 24px !important;
}

.pr {
  padding-right: 24px !important;
}

.pb {
  padding-bottom: 24px !important;
}

.pl {
  padding-left: 24px !important;
}

.pe {
  padding-top: 24px !important;
  padding-bottom: 24px !important;
}

.ps {
  padding-right: 24px !important;
  padding-left: 24px !important;
}

/**
 * Add small paddings.
 */
.p- {
  padding: 12px !important;
}

.pt- {
  padding-top: 12px !important;
}

.pr- {
  padding-right: 12px !important;
}

.pb- {
  padding-bottom: 12px !important;
}

.pl- {
  padding-left: 12px !important;
}

.pe- {
  padding-top: 12px !important;
  padding-bottom: 12px !important;
}

.ps- {
  padding-right: 12px !important;
  padding-left: 12px !important;
}

/**
 * Add large paddings.
 */
.p\+ {
  padding: 48px !important;
}

.pt\+ {
  padding-top: 48px !important;
}

.pr\+ {
  padding-right: 48px !important;
}

.pb\+ {
  padding-bottom: 48px !important;
}

.pl\+ {
  padding-left: 48px !important;
}

.pe\+ {
  padding-top: 48px !important;
  padding-bottom: 48px !important;
}

.ps\+ {
  padding-right: 48px !important;
  padding-left: 48px !important;
}

/**
 * Remove paddings.
 */
.p0 {
  padding: 0 !important;
}

.pt0 {
  padding-top: 0 !important;
}

.pr0 {
  padding-right: 0 !important;
}

.pb0 {
  padding-bottom: 0 !important;
}

.pl0 {
  padding-left: 0 !important;
}

.pe0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.ps0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}
